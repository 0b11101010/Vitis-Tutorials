function v4acc = mac4_sym(acc,xbuff,xstart,xoffsets,xstep,ybuff,ystart,zbuff,zstart,zoffsets,zstep)

[indx_ln_zbuff,indx_ln_xbuff,indx_ln_ybuff_0] = get_indcs(zstart,zoffsets,zstep,xstart,xoffsets,xstep,ystart);

v4acc(1) =  acc(1) ...
         +zbuff(indx_ln_zbuff(1,1))*(xbuff(indx_ln_xbuff(1,1))+ybuff(indx_ln_ybuff_0(1,1))) ...
         +zbuff(indx_ln_zbuff(1,2))*(xbuff(indx_ln_xbuff(1,2))+ybuff(indx_ln_ybuff_0(1,2))) ...
         +zbuff(indx_ln_zbuff(1,3))*(xbuff(indx_ln_xbuff(1,3))+ybuff(indx_ln_ybuff_0(1,3))) ...
         +zbuff(indx_ln_zbuff(1,4))*(xbuff(indx_ln_xbuff(1,4))+ybuff(indx_ln_ybuff_0(1,4)));
v4acc(2) =  acc(2) ...
         +zbuff(indx_ln_zbuff(2,1))*(xbuff(indx_ln_xbuff(2,1))+ybuff(indx_ln_ybuff_0(2,1))) ...
         +zbuff(indx_ln_zbuff(2,2))*(xbuff(indx_ln_xbuff(2,2))+ybuff(indx_ln_ybuff_0(2,2))) ...
         +zbuff(indx_ln_zbuff(2,3))*(xbuff(indx_ln_xbuff(2,3))+ybuff(indx_ln_ybuff_0(2,3))) ...
         +zbuff(indx_ln_zbuff(2,4))*(xbuff(indx_ln_xbuff(2,4))+ybuff(indx_ln_ybuff_0(2,4)));
v4acc(3) =  acc(3) ...
         +zbuff(indx_ln_zbuff(3,1))*(xbuff(indx_ln_xbuff(3,1))+ybuff(indx_ln_ybuff_0(3,1))) ...
         +zbuff(indx_ln_zbuff(3,2))*(xbuff(indx_ln_xbuff(3,2))+ybuff(indx_ln_ybuff_0(3,2))) ...
         +zbuff(indx_ln_zbuff(3,3))*(xbuff(indx_ln_xbuff(3,3))+ybuff(indx_ln_ybuff_0(3,3))) ...
         +zbuff(indx_ln_zbuff(3,4))*(xbuff(indx_ln_xbuff(3,4))+ybuff(indx_ln_ybuff_0(3,4)));
v4acc(4) =  acc(4) ...
         +zbuff(indx_ln_zbuff(4,1))*(xbuff(indx_ln_xbuff(4,1))+ybuff(indx_ln_ybuff_0(4,1))) ...
         +zbuff(indx_ln_zbuff(4,2))*(xbuff(indx_ln_xbuff(4,2))+ybuff(indx_ln_ybuff_0(4,2))) ...
         +zbuff(indx_ln_zbuff(4,3))*(xbuff(indx_ln_xbuff(4,3))+ybuff(indx_ln_ybuff_0(4,3))) ...
         +zbuff(indx_ln_zbuff(4,4))*(xbuff(indx_ln_xbuff(4,4))+ybuff(indx_ln_ybuff_0(4,4)));
end

function [z,x,y] = get_indcs(zstart,zoffsets,zstep,xstart,xoffsets,xstep,ystart)
    z = get_indc_circ(zstart,zoffsets,zstep);
    x = get_indc_circ(xstart,xoffsets,xstep);
    y = get_indc_circ(ystart,xoffsets,-xstep);
end

function indx = get_indc_circ(start,offsets,step)
    for i=1:length(offsets)
        for j=1:4
            indx(i,j) = start+1+offsets(i)+step*(j-1);
            if (indx(i,j) > 16)
                indx(i,j) = indx(i,j)-16;
            elseif (indx(i,j) < 1)    
                indx(i,j) = 16-indx(i,j);
            end
        end
    end
end