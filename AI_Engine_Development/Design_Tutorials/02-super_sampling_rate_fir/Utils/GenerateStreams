#
# Copyright (C) 2023, Advanced Micro Devices, Inc. All rights reserved.
# SPDX-License-Identifier: X11
#

#!/bin/bash

echo " "
echo "Stream Content Generation"
echo " "

# Saves arguments in 2 environment variables that can be read vy Python
export NArgs=$BASH_ARGC
export Args=$*

python - <<END

import os

from math import floor
from shutil import copyfile
from GenerationLib import *
from functools import partial

# gets variable from environment variable
NArgs = int(os.environ['NArgs'])
ArgsChain = os.environ['Args']
Args = ArgsChain.split()

# No argument
if (NArgs<1):
	print("\n================================================================================================\n")
	print("Usage:\nGenerateStreams DataType PLIO_Width NPhases NStreams NSamples NFrames SequenceType Basename")
	print("\tDatatype: cint16, int16, int32")
	print("\tPLIO_Width: 32, 64 or 128")
	print("\tNPhases: any integer >= 1")
	print("\tNStreams: 1 or 2")
	print("\tNSamples: integer, multiple of 8")
	print("\tNFrames: Any integer >= 1")
	print("\tSequenceType: Dirac, Linear, SinCos, Random")
	print("\tBasename: file name that will prepend phase and stream index")
	print("\n================================================================================================\n")
else:
	dtval = Args[0]
	pliow = int(Args[1])
	NPhases = int(Args[2])
	NStreams = int(Args[3])
	NSamples = int(Args[4])
	NFrames = int(Args[5])
	SeqType = Args[6]
	Basename = Args[7]

	GenerateTestVector(dtval,pliow,NPhases,NStreams,NSamples,NFrames,SeqType,Basename)

END
